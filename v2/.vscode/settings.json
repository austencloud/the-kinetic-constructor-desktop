{
  "python.testing.pytestEnabled": true,
  "python.testing.pytestArgs": [
    "tests",
    "--strict-markers",
    "--tb=short"
  ],
  "python.testing.autoTestDiscoverOnSaveEnabled": false,
  
  // File associations for lifecycle-based tests
  "files.associations": {
    "**/tests/scaffolding/**/*.py": "python-test-scaffolding",
    "**/tests/specification/**/*.py": "python-test-specification",
    "**/tests/regression/**/*.py": "python-test-regression"
  },
  
  // Color coding for different test types
  "workbench.colorCustomizations": {
    "[Default Dark+]": {
      // Scaffolding tests - orange (temporary)
      "tab.activeForeground": "#ff9500",
      "tab.inactiveForeground": "#ff9500"
    }
  },
  
  // File explorer decorations
  "explorer.decorations.colors": true,
  "explorer.decorations.badges": true,
  
  // Test discovery patterns
  "python.testing.pytestPaths": [
    "tests/scaffolding",
    "tests/specification", 
    "tests/regression",
    "tests/integration"
  ],
  
  // Snippets for test lifecycle metadata
  "editor.snippetSuggestions": "top",
  
  // Tasks for test lifecycle management
  "tasks": {
    "version": "2.0.0",
    "tasks": [
      {
        "label": "Check Test Health",
        "type": "shell",
        "command": "python",
        "args": ["tests/test_runner.py", "--health"],
        "group": "test",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared"
        },
        "problemMatcher": []
      },
      {
        "label": "Show Expired Tests",
        "type": "shell", 
        "command": "python",
        "args": ["tests/test_runner.py", "--expired"],
        "group": "test",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared"
        },
        "problemMatcher": []
      },
      {
        "label": "Generate Test Lifecycle Report",
        "type": "shell",
        "command": "python", 
        "args": ["tests/scripts/test_lifecycle_manager.py", "--report"],
        "group": "test",
        "presentation": {
          "echo": true,
          "reveal": "always", 
          "focus": false,
          "panel": "shared"
        },
        "problemMatcher": []
      },
      {
        "label": "Run Scaffolding Tests Only",
        "type": "shell",
        "command": "python",
        "args": ["tests/test_runner.py", "scaffolding", "-v"],
        "group": "test",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared"
        },
        "problemMatcher": []
      },
      {
        "label": "Run Specification Tests Only", 
        "type": "shell",
        "command": "python",
        "args": ["tests/test_runner.py", "specification", "-v"],
        "group": "test",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared"
        },
        "problemMatcher": []
      }
    ]
  },
  
  // Python path configuration
  "python.defaultInterpreterPath": "./venv/Scripts/python.exe",
  "python.terminal.activateEnvironment": true,
  
  // Test file templates
  "files.defaultLanguage": "python",
  
  // Exclude patterns for search
  "search.exclude": {
    "**/tests/results/**": true,
    "**/test_cleanup_report.md": true,
    "**/migration_plan.md": true
  },
  
  // Auto-save for test files
  "files.autoSave": "onFocusChange",
  
  // Lint configuration for test files
  "python.linting.enabled": true,
  "python.linting.pylintEnabled": false,
  "python.linting.flake8Enabled": true,
  "python.linting.flake8Args": [
    "--max-line-length=100",
    "--ignore=E203,W503"
  ],
  
  // Format on save for test files
  "editor.formatOnSave": true,
  "python.formatting.provider": "black",
  "python.formatting.blackArgs": [
    "--line-length=100"
  ],
  
  // IntelliSense configuration
  "python.analysis.typeCheckingMode": "basic",
  "python.analysis.autoImportCompletions": true,
  
  // Git integration
  "git.ignoreLimitWarning": true,
  
  // Terminal configuration
  "terminal.integrated.defaultProfile.windows": "Command Prompt",
  "terminal.integrated.cwd": "${workspaceFolder}/v2"
}
