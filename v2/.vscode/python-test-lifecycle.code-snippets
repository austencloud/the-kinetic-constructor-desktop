{
  "Scaffolding Test Template": {
    "prefix": "test-scaffolding",
    "body": [
      "\"\"\"",
      "TEST LIFECYCLE: SCAFFOLDING",
      "PURPOSE: ${1:One-line description of why this test exists}",
      "DELETE_AFTER: ${2:YYYY-MM-DD}",
      "CREATED: ${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE}",
      "AUTHOR: @${3:username}",
      "RELATED_ISSUE: #${4:issue_number} (if applicable)",
      "\"\"\"",
      "",
      "import pytest",
      "from unittest.mock import Mock, patch",
      "",
      "",
      "@pytest.mark.scaffolding",
      "@pytest.mark.delete_after(\"${2:YYYY-MM-DD}\")",
      "@pytest.mark.${5|debug,exploration,spike|}",
      "class Test${6:ComponentName}${7|Debug,Exploration,Spike|}:",
      "    \"\"\"DELETE: ${8:Brief description of what this test is debugging/exploring}\"\"\"",
      "    ",
      "    def setup_method(self):",
      "        \"\"\"Setup for each test method.\"\"\"",
      "        ${9:# Temporary setup code}",
      "        pass",
      "    ",
      "    def test_${10:temporary_case}(self):",
      "        \"\"\"DELETE: ${11:Description of what this specific test is checking}\"\"\"",
      "        ${12:# Temporary test code to debug/explore specific issue}",
      "        pass"
    ],
    "description": "Create a scaffolding test with proper lifecycle metadata"
  },
  
  "Specification Test Template": {
    "prefix": "test-specification",
    "body": [
      "\"\"\"",
      "TEST LIFECYCLE: SPECIFICATION",
      "PURPOSE: Enforce ${1:specific behavioral contract or business rule}",
      "PERMANENT: ${2:Why this behavior must always be preserved}",
      "AUTHOR: @${3:username}",
      "\"\"\"",
      "",
      "import pytest",
      "from unittest.mock import Mock, patch",
      "",
      "",
      "@pytest.mark.specification",
      "@pytest.mark.${4|critical,important|}",
      "class Test${5:ComponentName}Contract:",
      "    \"\"\"Permanent specification test - NEVER DELETE unless feature removed\"\"\"",
      "    ",
      "    def setup_method(self):",
      "        \"\"\"Setup for each test method.\"\"\"",
      "        ${6:# Setup code for testing the contract}",
      "        pass",
      "    ",
      "    def test_${7:core_behavioral_contract}(self):",
      "        \"\"\"PERMANENT: ${8:Description of the behavioral contract being enforced}\"\"\"",
      "        ${9:# Test the contract, not the implementation}",
      "        pass"
    ],
    "description": "Create a specification test with proper lifecycle metadata"
  },
  
  "Regression Test Template": {
    "prefix": "test-regression",
    "body": [
      "\"\"\"",
      "TEST LIFECYCLE: REGRESSION",
      "PURPOSE: Prevent ${1:specific bug or performance issue} from reoccurring",
      "BUG_REPORT: #${2:issue_number} or ${3:description of the original problem}",
      "FIXED_DATE: ${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE}",
      "AUTHOR: @${4:username}",
      "\"\"\"",
      "",
      "import pytest",
      "from unittest.mock import Mock, patch",
      "",
      "",
      "@pytest.mark.regression",
      "@pytest.mark.${5|critical,important|}",
      "class Test${6:IssueNumber}${7:BugName}Regression:",
      "    \"\"\"Prevent ${8:specific bug} regression - DELETE only if feature removed\"\"\"",
      "    ",
      "    def setup_method(self):",
      "        \"\"\"Setup for each test method.\"\"\"",
      "        ${9:# Setup code to reproduce the bug scenario}",
      "        pass",
      "    ",
      "    def test_${10:original_bug_scenario_fixed}(self):",
      "        \"\"\"REGRESSION: ${11:Description of the original bug scenario}\"\"\"",
      "        ${12:# Reproduce the exact scenario that caused the bug}",
      "        pass"
    ],
    "description": "Create a regression test with proper lifecycle metadata"
  },
  
  "Debug Test Method": {
    "prefix": "test-debug-method",
    "body": [
      "def test_${1:debug_case}(self):",
      "    \"\"\"DELETE: ${2:Description of what this debug test is checking}\"\"\"",
      "    ${3:# Temporary debugging code}",
      "    pass"
    ],
    "description": "Add a debug test method with DELETE marker"
  },
  
  "Specification Test Method": {
    "prefix": "test-spec-method", 
    "body": [
      "def test_${1:contract_name}(self):",
      "    \"\"\"PERMANENT: ${2:Description of the behavioral contract}\"\"\"",
      "    ${3:# Test the contract, not implementation details}",
      "    pass"
    ],
    "description": "Add a specification test method with PERMANENT marker"
  },
  
  "Regression Test Method": {
    "prefix": "test-regression-method",
    "body": [
      "def test_${1:bug_scenario}(self):",
      "    \"\"\"REGRESSION: ${2:Description of the bug scenario being prevented}\"\"\"",
      "    ${3:# Reproduce the exact scenario that caused the bug}",
      "    pass"
    ],
    "description": "Add a regression test method with REGRESSION marker"
  },
  
  "Test Lifecycle Metadata": {
    "prefix": "test-metadata",
    "body": [
      "\"\"\"",
      "TEST LIFECYCLE: ${1|SCAFFOLDING,SPECIFICATION,REGRESSION|}",
      "PURPOSE: ${2:Description of test purpose}",
      "$3",
      "AUTHOR: @${4:username}",
      "\"\"\""
    ],
    "description": "Add test lifecycle metadata to existing test"
  },
  
  "Scaffolding Metadata": {
    "prefix": "scaffolding-meta",
    "body": [
      "DELETE_AFTER: ${1:YYYY-MM-DD}",
      "CREATED: ${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE}",
      "RELATED_ISSUE: #${2:issue_number} (if applicable)"
    ],
    "description": "Add scaffolding-specific metadata"
  },
  
  "Specification Metadata": {
    "prefix": "specification-meta", 
    "body": [
      "PERMANENT: ${1:Why this behavior must always be preserved}"
    ],
    "description": "Add specification-specific metadata"
  },
  
  "Regression Metadata": {
    "prefix": "regression-meta",
    "body": [
      "BUG_REPORT: #${1:issue_number} or ${2:description}",
      "FIXED_DATE: ${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE}"
    ],
    "description": "Add regression-specific metadata"
  },
  
  "Pytest Scaffolding Markers": {
    "prefix": "pytest-scaffolding",
    "body": [
      "@pytest.mark.scaffolding",
      "@pytest.mark.delete_after(\"${1:YYYY-MM-DD}\")",
      "@pytest.mark.${2|debug,exploration,spike|}"
    ],
    "description": "Add pytest markers for scaffolding tests"
  },
  
  "Pytest Specification Markers": {
    "prefix": "pytest-specification",
    "body": [
      "@pytest.mark.specification", 
      "@pytest.mark.${1|critical,important|}"
    ],
    "description": "Add pytest markers for specification tests"
  },
  
  "Pytest Regression Markers": {
    "prefix": "pytest-regression",
    "body": [
      "@pytest.mark.regression",
      "@pytest.mark.${1|critical,important|}"
    ],
    "description": "Add pytest markers for regression tests"
  }
}
